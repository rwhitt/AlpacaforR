% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Watchlist.R
\name{watchlist}
\alias{watchlist}
\title{Access all Watchlist Endpoints}
\usage{
watchlist(
  watchlist_id = NULL,
  symbols = NULL,
  action = "get",
  new_name,
  live = get_live()
)
}
\arguments{
\item{watchlist_id}{\code{(character)} \strong{Watchlist Name or ID}. If \code{NULL} \strong{Default}, the array of all saved \code{Watchlist} will be returned. All other actions to be performed on the provided \code{Watchlist} name or ID must be explicitly specified via \code{action}. See below for description of the behavior of this argument based on the value supplied to \code{action}.}

\item{symbols}{\code{(character)} Vector of symbols. Must be specified with a \code{watchlist_id}. If the \code{action} is:
\itemize{
\item{\code{"get" **Default**}}{ \code{action} assumed to be add and \code{symbols} will be added.}
\item{\code{"create"}}{ A \code{Watchlist} called \code{watchlist_id} will be created with \code{symbols}. If symbols are missing the new \code{Watchlist} will be empty.}
\item{\code{"add"}}{ The \code{symbols} will be added to the specified \code{watchlist_id}. If this argument is specified with \code{watchlist_id} and \code{new_name} the \code{Watchlist} will be renamed to \code{new_name} and the \code{symbols} will be added. Set \code{action = "update"} explicitly to replace existing symbols with \code{symbols} when renaming.}
\item{\code{"update"}}{ The \code{symbols} will replace those in \code{watchlist_id}.}
\item{\code{"delete"}}{ If this argument is specified with \code{watchlist_id}, the \code{symbols} will be deleted from the \code{Watchlist}. If \code{symbols} is missing the \code{Watchlist} will be deleted.}
}}

\item{action}{\code{(character)} The action to take. See other parameters for detailed descriptions of how this argument determines the action when combinations of parameters are specified. This argument can be abbreviated with a single non-case-sensitive letter. One of:
\itemize{
\item{\code{"get"/"g"}}{ \strong{Default} If no \code{watchlist_id} is specified, an array of all \code{Watchlist} will be returned, otherwise a the watchlist specified by \code{watchlist_id} will be returned. If \code{symbols} are specified, the symbols will be added to the \code{watchlist_id}.}
\item{\code{"create"/"c"}}{ A \code{Watchlist} will be created named according to \code{watchlist_id} with any \code{symbols} provided.}
\item{\code{"add"/"a"}}{ the \code{watchlist_id} will have \code{symbols} added. If \code{new_name} is also specified, \code{symbols} will be added (unless \code{action = "update"})}
\item{\code{"update"/"u"}}{ \code{watchlist_id} is \emph{required} and will have it's symbols replaced by those provided to \code{symbols}. If \code{new_name} and \code{symbols} are provided the \code{Watchlist} will be renamed and the \code{symbols} will \emph{replace} the existing ones. If the \code{symbols} are meant to be added, do not set action, or set as \code{"add"}.}
\item{\code{"delete"/"d"}}{ If \code{action = "delete"} with \code{watchlist_id}, the \code{symbols} will be deleted from the \code{Watchlist}. If \code{symbols} is missing the \code{Watchlist} with id/name \code{watchlist_id} will be deleted.}
}}

\item{new_name}{\code{(character)} arbitrary name string, up to 64 characters. If present, then \code{action = "update"} is assumed and the \code{Watchlist} specified by \code{watchlist_id} will be renamed to \code{new_name} preserving existing symbols, unless \code{symbols} is present, in which case they will replace the existing.}

\item{live}{\code{(logical)} TRUE / FALSE if you are connecting to a live account. Default to FALSE, so it will use the paper url if nothing was provided.}
}
\value{
\code{Watchlist} \code{(tibble)} If \code{watchlist()} is called with no arguments, an \code{tibble} of \href{https://alpaca.markets/docs/api-documentation/api-v2/watchlist/#watchlist-entity}{Watchlist} Object.  For all others \code{action}s, a \code{tibble} of \href{https://alpaca.markets/docs/api-documentation/api-v2/assets/#asset-entity}{Asset} Objects with the \code{Watchlist} stored as an attribute retrieved with \code{attr(Asset, "info")} and query metadata stored as \code{attr(Asset, "query")}. A \code{Watchlist} object has the following information:
\itemize{
\item{\code{name}}{\code{(character)} The name of the watchlist.}
\item{\code{updated_at}}{\code{(POSIXct)} The timestamp of the last update.}
\item{\code{id}}{\code{(character)} Watchlist ID}
\item{\code{account_id}}{\code{(character)} The account ID associated with the watchlist}
\item{\code{created_at}}{\code{(POSIXct)} The timestamp of the watchlist creation.}
}
}
\description{
Access all \href{https://alpaca.markets/docs/api-documentation/api-v2/watchlist}{Watchlist} endpoints. See link for details. \lifecycle{stable}
}
\examples{
\dontrun{
# get the existing watchlists
watchlist()
# create a watchlist named test with Microsoft
(wl <- watchlist("test", symbols = "AAPL", action = "c"))
# See it in the list of watchlists
watchlist()
# Get it
(test <- watchlist("test"))
all.equal(test,wl, check.attributes = FALSE)
# Get that Watchlist's info
attr(wl, "info")
# Add "FB", "AMZN", "NFLX", "GOOG" and update the watchlist name to "FAANG"
(wl <- watchlist("test", new_name = "FAANG", symbols = c("FB", "AMZN", "NFLX", "GOOG")))
# Add individual stocks by specifying symbols (action assumed to be add when symbols are present)
(wl <- watchlist("FAANG", symbol = "GOOGL"))
# Delete individual items (or multiple)
(wl <- watchlist("FAANG", action = "d", symbols = "GOOGL"))
# Rename it appropriately and replace the symbols to match the name by specifying action = "update" explicitly.
(wl <- watchlist("FAANG", new_name = "FANG", symbols = c("FB", "AAPL", "NFLX", "GOOG"), action = "u"))
# Delete it using a partial argument (may cause a warning)
watchlist("FANG", a = "d")
}
}
\concept{Watchlist}
