% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Assets.R
\name{assets}
\alias{assets}
\title{Get Assets}
\usage{
assets(...)
}
\arguments{
\item{...}{\code{(character)} asset symbols or IDs. If NULL (the default), a tibble of all assets is returned.}
}
\value{
Asset \code{(tibble)} \href{https://alpaca.markets/docs/api-documentation/api-v2/assets/#asset-entity}{Asset} Object or array of Asset objects with the following parameters:
\itemize{
\item{\code{id}}{ \code{(character)} Asset ID as a string.}
\item{\code{class}}{ \code{(character)} us_equity as a string.}
\item{\code{exchange}}{ \code{(character)} AMEX, ARCA, BATS, NYSE, NASDAQ or NYSEARCA as a string.}
\item{\code{symbol}}{ \code{(character)} Stock symbol as a string.}
\item{\code{name}}{ \code{(character)} Full company name}
\item{\code{status}}{ \code{(character)} active or inactive as a string.}
\item{\code{tradable}}{ \code{(logical)} Asset is tradable on Alpaca or not.}
\item{\code{marginable}}{ \code{(logical)} Asset is marginable on Alpaca or not.}
\item{\code{shortable}}{ \code{(logical)} Asset is shortable on Alpaca or not.}
\item{\code{easy_to_borrow}}{ \code{(logical)} Asset is easy-to-borrow or not (filtering for \code{easy_to_borrow = TRUE} is the best way to check whether the name is currently available to short at Alpaca).}
}
@details Errors will be caught and surfaced but the function will always return a \code{(tibble)} to prevent error breaks when retrieving a large vector of assets.
}
\description{
The assets API serves as the master list of assets available for trade and data consumption from Alpaca. Assets are sorted by asset class, exchange and symbol. Some assets are only available for data consumption via Polygon, and are not tradable with Alpaca. These assets will be marked with the flag \code{tradable = FALSE}. See \href{https://alpaca.markets/docs/api-documentation/api-v2/assets#get-an-asset}{Assets: GET} for details.
}
\details{
This function is vectorized over all arguments.
}
\examples{
\dontrun{
# Get a tibble of all active assets: 
assets()
# Get a specific asset by symbol:
(AAPL <- assets("AAPL"))
# or by id:
(AAPL <- assets(AAPL$id))
}
}
\concept{Assets}
